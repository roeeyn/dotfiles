#!/bin/bash
set -e

# After brew installed goes here!

# Installing ansible
echo 'Installing ansible...'
pip3 install ansible

echo 'Installing aactivator...'
pip3 install aactivator

echo 'Setting up Node LTS'
n lts

# Decrypting keys
echo 'Decrypting vault passwords...'
ansible-vault decrypt --vault-password-file ~/.dotfiles/ansible_password.txt --output ~/.dotfiles/dot/.ssh/id_ed25519.pub ~/.dotfiles/dot/.ssh/id_ed25519.pub.enc
ansible-vault decrypt --vault-password-file ~/.dotfiles/ansible_password.txt --output ~/.dotfiles/dot/.ssh/id_ed25519 ~/.dotfiles/dot/.ssh/id_ed25519.enc

ansible-vault decrypt --vault-password-file ~/.dotfiles/ansible_password.txt --output ~/.dotfiles/dot/.gnupg/pgp_secret.txt ~/.dotfiles/dot/.gnupg/pgp_secret.txt.enc
ansible-vault decrypt --vault-password-file ~/.dotfiles/ansible_password.txt --output ~/.dotfiles/dot/.gnupg/pgp_public.txt ~/.dotfiles/dot/.gnupg/pgp_public.txt.enc

# SSH config
echo "Configuring ssh keys..."
eval "$(ssh-agent -s)"
ssh-add -K ~/.ssh/id_ed25519


echo 'Trying GPG installation...'
# Remember to kill the gpg-agent so the new pinentry can work
# gpgconf --kill gpg-agent
gpg_key_id='615B67D406A71EC5'
if ! gpg --list-secret-keys --keyid-format=long | rg $gpg_key_id &>/dev/null; then
  echo 'Installing GPG key...'
  gpg --import ~/.dotfiles/dot/.gnupg/pgp_public.txt
  gpg --import ~/.dotfiles/dot/.gnupg/pgp_secret.txt
  gpg --list-secret-keys
  gpg --list-secret-keys --keyid-format=long
  git config --global user.signingkey $gpg_key_id
  git config --global commit.gpgsign true
else
  echo 'GPG key already installed, skipping...'
fi

# Symlink again the .ssh files
stow dot/ --target=$HOME

## Install Oh My Zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    # Oh My Zsh installing script
    echo "Installing oh my zsh..."
    curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh

    # OMZ plugins
    echo "Installing oh my zsh plugins..."
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

    # Tmux package manager
    echo "Installing tmux package manager..."
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

    # Oh my zshrc will update the zshrc file
    rm ~/.zshrc
    stow dot/ --target=$HOME

else
    echo "Detected oh my zsh installation... skipping it"
fi
